syntax = "proto3";

option go_package = "github.com/aousomran/sqlite-og";

service SqliteOG {
  rpc Query(Statement) returns (QueryResult){}
  rpc Execute(Statement) returns (ExecuteResult){}
  rpc ExecuteOrQuery(Statement) returns (ExecuteOrQueryResult){}
  rpc Callback(stream InvocationResult) returns (stream Invoke){}
  rpc Connection(ConnectionRequest) returns (ConnectionId){}
  rpc Close(ConnectionId) returns(Empty){}
  rpc IsValid(ConnectionId) returns(Empty){}
  rpc Ping(Empty) returns(Empty){}
  rpc ResetSession(ConnectionId) returns(ConnectionId){}
}

message Empty{}

message ConnectionId {
  string id = 1;
}

message ConnectionRequest {
  string db_name = 1;
  repeated string functions = 2;
  repeated string aggregators = 3;
}

message InvocationResult {
  bool initial = 1;
  repeated string result = 2;
}

message Invoke {
  string functionName = 1;
  repeated string args = 2;
}

message ExecuteOrQueryResult {
  QueryResult query_result = 1;
  ExecuteResult execute_result = 2;
}

message Statement {
  string sql = 1;
  repeated string params = 2;
  string cnx_id = 3;
}

message Row {
  repeated string fields = 1;
}

message QueryResult {
  repeated string columns = 1;
  repeated string columnTypes = 2;
  repeated Row rows = 3;
}

message ExecuteResult {
  int64 lastInsertId = 1;
  int64 affectedRows = 2;
}

//message Parameter {
//  oneof value {
//    sint64 i = 1;
//    double d = 2;
//    bool b = 3;
//    bytes y = 4;
//    string s = 5;
//  }
//  string name = 6;
//}
